syntax = "proto3";

package umaster.user.v1;

import "shared/user/v1/user.proto";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  rpc FindById(FindByIdRequest) returns (FindByIdResponse) {}
  rpc FindByIds(FindByIdsRequest) returns (FindByIdsResponse) {}
  rpc FindByEmail(FindByEmailRequest) returns (FindByEmailResponse) {}
  rpc FindByUsername(FindByUsernameRequest) returns (FindByUsernameResponse) {}

  rpc FindByWalletAddress(FindByWalletAddressRequest)
      returns (FindByWalletAddressResponse) {}
  rpc GenerateNonceMessage(GenerateNonceMessageRequest)
      returns (GenerateNonceMessageResponse) {}
  rpc ConnectWalletAddress(ConnectWalletAddressRequest)
      returns (ConnectWalletAddressResponse) {}
  rpc GetWallets(GetWalletsRequest) returns (GetWalletsResponse) {}
  rpc DisconnectWalletAddress(DisconnectWalletAddressRequest)
      returns (DisconnectWalletAddressResponse) {}

  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {}
}

message CreateUserRequest {
  string email = 1;
  string password = 2;
  string username = 3;
}

message CreateUserResponse { shared.user.v1.User user = 1; }

message FindByIdRequest { string user_id = 1; }

message FindByIdResponse { shared.user.v1.User user = 1; }

message FindByIdsRequest { repeated string user_ids = 1; }

message FindByIdsResponse { repeated shared.user.v1.User users = 1; }

message FindByEmailRequest { string email = 1; }

message FindByEmailResponse { shared.user.v1.User user = 1; }

message FindByUsernameRequest { string username = 1; }

message FindByUsernameResponse { shared.user.v1.User user = 1; }

message UpdateProfileRequest {
  string user_id = 1;
  shared.user.v1.UserProfile user_profile = 2;
}

message UpdateProfileResponse { shared.user.v1.User user = 1; }

message FindByWalletAddressRequest { string wallet_address = 1; }

message FindByWalletAddressResponse { shared.user.v1.User user = 1; }

message GenerateNonceMessageRequest {
  string user_id = 1;
  string wallet_address = 2;
  shared.user.v1.WalletNetwork network = 3;
}

message GenerateNonceMessageResponse { string message = 1; }

message ConnectWalletAddressRequest {
  string user_id = 1;
  string wallet_address = 2;
  shared.user.v1.WalletNetwork network = 3;
  string signature = 4;
}

message ConnectWalletAddressResponse { shared.user.v1.Wallet user_wallet = 1; }

message DisconnectWalletAddressRequest {
  string user_id = 1;
  string wallet_address = 2;
  shared.user.v1.WalletNetwork network = 3;
}

message DisconnectWalletAddressResponse { shared.user.v1.Wallet wallet = 1; }

message GetWalletsRequest { string user_id = 1; }

message GetWalletsResponse { repeated shared.user.v1.Wallet user_wallets = 1; }