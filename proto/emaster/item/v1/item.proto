syntax = "proto3";

package emaster.item.v1;

import "shared/item/v1/item.proto";

service ItemService {
  rpc GetItemsByIds(GetItemsByIdsRequest) returns (GetItemsByIdsResponse) {}
  rpc GetItemsByUser(GetItemsByUserRequest) returns (GetItemsByUserResponse) {}
  rpc GetItemsByWallet(GetItemsByWalletRequest)
      returns (GetItemsByWalletResponse) {}
  rpc GetMarketplace(GetMarketplaceRequest) returns (GetMarketplaceResponse) {}

  rpc CheckOwnership(CheckOwnershipRequest) returns (CheckOwnershipResponse) {}

  rpc ChangeItemSale(ChangeItemSaleRequest) returns (ChangeItemSaleResponse) {}

  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {}
  rpc MintItem(MintItemRequest) returns (MintItemResponse) {}
  rpc ChangeOwnerItem(ChangeOwnerItemRequest)
      returns (ChangeOwnerItemResponse) {}
}

message GetItemsByIdsRequest { repeated string item_ids = 1; }

message GetItemsByIdsResponse { repeated shared.item.v1.Item items = 1; }

message GetItemsByUserRequest { string user_id = 1; }

message GetItemsByUserResponse { repeated shared.item.v1.Item items = 1; }

message GetMarketplaceRequest { string user_id = 1; }

message GetMarketplaceResponse { repeated shared.item.v1.Item items = 1; }

message CheckOwnershipRequest {
  string user_id = 1;
  string item_id = 2;
}

message CheckOwnershipResponse { bool owned = 1; }

message ChangeItemSaleRequest {
  string item_id = 1;
  bool is_for_sale = 2;
  int32 price = 3;
  optional int32 market_item_id = 4;
}

message ChangeItemSaleResponse { shared.item.v1.Item item = 1; }

message GetItemsByWalletRequest { string wallet_address = 1; }

message GetItemsByWalletResponse { repeated shared.item.v1.Item items = 1; }

message CreateItemRequest {
  string user_id = 1;
  shared.item.v1.ItemType type = 2;
  string metadata_ipfs = 3;
}

message CreateItemResponse { shared.item.v1.Item item = 1; }

message MintItemRequest {
  string wallet_address = 1;
  string item_id = 2;
  int32 token_id = 3;
}

message MintItemResponse { shared.item.v1.Item item = 1; }

message ChangeOwnerItemRequest {
  string wallet_address = 1;
  string item_id = 2;
}

message ChangeOwnerItemResponse { shared.item.v1.Item item = 1; }